plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.kokimstocktrading'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

// 메인 클래스 지정
springBoot {
    mainClass.set('com.kokimstocktrading.TransactionServiceApplication')
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // common 모듈 의존성 추가 - EnvConfig 포함
    implementation project(':common')

    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // PostgreSQL JDBC driver
    implementation 'org.postgresql:postgresql:42.7.3'

    // DSQL 관련 의존성
    implementation 'software.amazon.awssdk:dsql:2.31.32'
    implementation 'software.amazon.dsql:aurora-dsql-hibernate-dialect:1.0.0'

    // Connection pool
    implementation 'com.zaxxer:HikariCP:5.1.0'

    // Swagger (SpringDoc OpenAPI)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // WebSocket & JSON
    implementation 'org.java-websocket:Java-WebSocket:1.5.7'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'org.slf4j:slf4j-api:2.0.16'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

// Spring Boot 내장 Docker 지원
springBoot {
    mainClass.set('com.kokimstocktrading.TransactionServiceApplication')
    buildInfo()
}

tasks.named('compileJava') {
    options.compilerArgs += ['-Xlint:deprecation', '-Xlint:unchecked']
}

tasks.named('test') {
    useJUnitPlatform()
}
