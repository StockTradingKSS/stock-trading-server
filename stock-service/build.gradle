plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.palantir.docker' version '0.35.0'
}

group = 'com.KimStock'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

// 메인 클래스 지정
springBoot {
    mainClass.set('com.KimStock.TransactionServiceApplication')
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // common 모듈 의존성 추가 - EnvConfig 포함
    implementation project(':common')

    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    
    // R2DBC PostgreSQL driver
    implementation 'org.postgresql:r2dbc-postgresql:1.0.5.RELEASE'
    implementation 'org.postgresql:postgresql:42.7.3'
    
    // Connection pool
    implementation 'io.r2dbc:r2dbc-pool'
    
    // Swagger (SpringDoc OpenAPI)
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.5.0'
    
    // WebSocket & JSON
    implementation 'org.java-websocket:Java-WebSocket:1.5.7'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'org.slf4j:slf4j-api:2.0.16'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

docker {
    println(tasks.bootJar.outputs.files)
    name rootProject.name +'-'+ project.name +':'+version
    dockerfile file('../Dockerfile')
    files tasks.bootJar.outputs.files
    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
}

tasks.named('test') {
    useJUnitPlatform()
}
